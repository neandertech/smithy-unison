//| mill-version: 1.0.5
//| mill-jvm-version: temurin:17

import mill.*
import mill.scalalib.*
import mill.javalib.publish.*
import mill.util.JarManifest
import mill.api.Task.Simple

object plugin extends ScalaModule with PublishModule {

  def publishName = "smithy-unison"

  override def scalacOptions: Simple[Seq[String]] = Task {
    super.scalacOptions() ++ Seq("--release", "17")
  }

  override def artifactId: Simple[String] = "smithy-unison"

  def pomSettings: Task.Simple[mill.javalib.publish.PomSettings] = Task {
    PomSettings(
      description = "A smithy-build plugin that generates code for the Unison programming language.",
      organization = "tech.neander",
      url = "https://github.com/neandertech/smithy-unison",
      licenses = Seq(License.`Apache-2.0`),
      versionControl = VersionControl(),
      developers = Seq.empty,
    )
  }

  def publishVersion: Task.Simple[String] = Task.Input {
    val refTagSuffix    = "refs/tags/v"
    val env             = Task.ctx().env
    // By convention, CI products (Jenkins, GHA, Circle, etc) set the `CI` env-var
    val result          =
      if (!env.contains("CI")) "dev-SNAPSHOT"
      else {
        // If version is triggered from a github tag/release, then we use the corresponding
        // value provided by the `GITHUB_REF` environment variable. Otherwise, we use
        // the git-based version to ensure uniqueness of version numbers.
        env
          .get("GITHUB_REF")
          .filter(_.startsWith(refTagSuffix))
          .map(_.drop(refTagSuffix.length))
          .getOrElse(sys.error("Count not find a version number"))
      }
    result
  }

  def scalaVersion = "3.7.1"
  def mvnDeps = Seq(
    mvn"software.amazon.smithy:smithy-build:1.61.0",
  )

}
